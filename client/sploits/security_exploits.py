from avala import exploit, Batching, TargetingStrategy, FlagIdScope
import secrets
import string


@exploit(
    service="security",
    alias="security.testing",
    targets=["10.10.19.1", "10.10.20.1", "10.10.21.1"],
    draft=True,
)
def testing(target: str, flag_ids: str):
    # flag_ids is a single email string for this target/tick
    email = flag_ids  # e.g. "alice@example.com"
    return fake_attack(f"http://{target}:9000/flag_lookup?email={email}")


@exploit(
    service="security",
    alias="all_at_once",
    flag_id_scope=FlagIdScope.LAST_N_TICKS,
    batching=Batching(size=5, interval=2),
    delay=15,
)
def strategy_batches(target: str, flag_ids: list[str]):
    # `flag_ids` is now a list of recent email addresses for this target.
    # Fire one request per email and return all responses; Avala will extract flags.
    responses = []
    for email in flag_ids:
        responses.append(fake_attack(f"http://{target}:9000/flag_lookup?email={email}"))
    return responses


### functions used for simulating the attacks ###


def gen_fake_flag() -> str:
    alphabet = string.ascii_letters + string.digits + "+/="
    return "ENO" + "".join(secrets.choice(alphabet) for _ in range(48))


def fake_attack(url: str, *args, **kwargs) -> str:
    return f"""
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>gg here's the flag</title>
</head>
<body>
    {gen_fake_flag()}
</body>
</html>
"""
